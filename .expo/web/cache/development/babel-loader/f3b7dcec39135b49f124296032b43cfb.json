{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/lydia/Desktop/\\u5927\\u4EC1\\u5C08\\u6848/MedApp/src/screens/Quiz.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Button, ButtonContainer } from \"../components/Button\";\nimport { Alert } from \"../components/Alert\";\n\nvar Quiz = function (_React$Component) {\n  _inherits(Quiz, _React$Component);\n\n  var _super = _createSuper(Quiz);\n\n  function Quiz() {\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      correctCount: 0,\n      totalCount: _this.props.navigation.getParam(\"questions\", []).length,\n      activeQuestionIndex: 0,\n      answered: false,\n      answerCorrect: false\n    };\n\n    _this.answer = function (correct) {\n      _this.setState(function (state) {\n        var nextState = {\n          answered: true\n        };\n\n        if (correct) {\n          nextState.correctCount = state.correctCount + 1;\n          nextState.answerCorrect = true;\n        } else {\n          nextState.answerCorrect = false;\n        }\n\n        return nextState;\n      }, function () {\n        setTimeout(function () {\n          return _this.nextQuestion();\n        }, 750);\n      });\n    };\n\n    _this.nextQuestion = function () {\n      _this.setState(function (state) {\n        var nextIndex = state.activeQuestionIndex + 1;\n\n        if (nextIndex >= state.totalCount) {\n          return _this.props.navigation.popToTop();\n        }\n\n        return {\n          activeQuestionIndex: nextIndex,\n          answered: false\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var questions = this.props.navigation.getParam(\"questions\", []);\n      var question = questions[this.state.activeQuestionIndex];\n      return React.createElement(View, {\n        style: [styles.container, {\n          backgroundColor: this.props.navigation.getParam(\"color\")\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }), React.createElement(SafeAreaView, {\n        style: styles.safearea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, question.question), React.createElement(ButtonContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, question.answers.map(function (answer) {\n        return React.createElement(Button, {\n          key: answer.id,\n          text: answer.text,\n          onPress: function onPress() {\n            return _this2.answer(answer.correct);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }\n        });\n      }))), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, this.state.correctCount + \"/\" + this.state.totalCount)), React.createElement(Alert, {\n        correct: this.state.answerCorrect,\n        visible: this.state.answered,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Quiz;\n}(React.Component);\n\nexport default Quiz;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#D4F0EB\",\n    flex: 1,\n    paddingHorizontal: 20\n  },\n  text: {\n    color: \"#fff\",\n    fontSize: 25,\n    textAlign: \"center\",\n    letterSpacing: -0.02,\n    fontWeight: \"600\"\n  },\n  safearea: {\n    flex: 1,\n    marginTop: 100,\n    justifyContent: \"space-between\"\n  }\n});","map":{"version":3,"sources":["/Users/lydia/Desktop/大仁專案/MedApp/src/screens/Quiz.js"],"names":["React","Button","ButtonContainer","Alert","Quiz","state","correctCount","totalCount","props","navigation","getParam","length","activeQuestionIndex","answered","answerCorrect","answer","correct","setState","nextState","setTimeout","nextQuestion","nextIndex","popToTop","questions","question","styles","container","backgroundColor","safearea","text","answers","map","id","Component","StyleSheet","create","flex","paddingHorizontal","color","fontSize","textAlign","letterSpacing","fontWeight","marginTop","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, StatusBar, Text, SafeAreaView } from \"react-native\";\n\nimport { Button, ButtonContainer } from \"../components/Button\";\nimport { Alert } from \"../components/Alert\";\n\n\nclass Quiz extends React.Component {\n  state = {\n    correctCount: 0,\n    totalCount: this.props.navigation.getParam(\"questions\", []).length,\n    activeQuestionIndex: 0,\n    answered: false,\n    answerCorrect: false\n  };\n\n  answer = correct => {\n    this.setState(\n      state => {\n        const nextState = { answered: true };\n\n        if (correct) {\n          nextState.correctCount = state.correctCount + 1;\n          nextState.answerCorrect = true;\n        } else {\n          nextState.answerCorrect = false;\n        }\n\n        return nextState;\n      },\n      () => {\n        setTimeout(() => this.nextQuestion(), 750);\n      }\n    );\n  };\n\n  nextQuestion = () => {\n    this.setState(state => {\n      const nextIndex = state.activeQuestionIndex + 1;\n\n      if (nextIndex >= state.totalCount) {\n        return this.props.navigation.popToTop();\n      }\n\n      return {\n        activeQuestionIndex: nextIndex,\n        answered: false\n      };\n    });\n  };\n\n  render() {\n    const questions = this.props.navigation.getParam(\"questions\", []);\n    const question = questions[this.state.activeQuestionIndex];\n\n    return (\n      <View\n        style={[\n          styles.container,\n          { backgroundColor: this.props.navigation.getParam(\"color\") }\n        ]}\n      >\n        <StatusBar barStyle=\"light-content\" />\n        <SafeAreaView style={styles.safearea}>\n          <View>\n            <Text style={styles.text}>{question.question}</Text>\n\n            <ButtonContainer>\n              {question.answers.map(answer => (\n                <Button\n                  key={answer.id}\n                  text={answer.text}\n                  onPress={() => this.answer(answer.correct)}\n                />\n              ))}\n            </ButtonContainer>\n          </View>\n\n          <Text style={styles.text}>\n            {`${this.state.correctCount}/${this.state.totalCount}`}\n          </Text>\n        </SafeAreaView>\n        <Alert\n          correct={this.state.answerCorrect}\n          visible={this.state.answered}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Quiz;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#D4F0EB\",\n    flex: 1,\n    paddingHorizontal: 20\n  },\n  text: {\n    color: \"#fff\",\n    fontSize: 25,\n    textAlign: \"center\",\n    letterSpacing: -0.02,\n    fontWeight: \"600\"\n  },\n  safearea: {\n    flex: 1,\n    marginTop: 100,\n    justifyContent: \"space-between\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}